apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: cdk-mar-base-archetype
  title: Base Archetype Template
  description: Create a blank backend arch
  tags:
    - backend
  annotations:
    backstage.io/techdocs-ref: dir:.
  archetypeDocs:
    title: Arquetipo
    path: index
  links:
    - url: https://marketplace.mar.mapfre.com/catalog/default/refarch/arqref_backend/archetype?filters[type]=service
      title: Backend base archetype.
      icon: docs
    - url: https://backstage.internaltest.marpoc.com/api/techdocs/static/docs/default/component/faq/videos/whatwascreated.mp4
      title: Backend base archetype.
      icon: scaffolder

spec:
  owner: mar2.0
  type: ref_architecture
  parameters:
    - title: Proporcione la siguiente información
      required:
        - component_id
      properties:
        productId:
          title: Zeus Product ID
          type: string
          description: Zeus Unique id of the product.
          ui:readonly: true
          ui:widget: hidden
        productShortName:
          title: Zeus Short Name
          type: string
          description: Zeus Unique name of the product.
          ui:readonly: true
          ui:widget: hidden
        archetype:
          title: Archetype
          type: string
          default: Backend Base
          description: Archetype name of the component.
          ui:readonly: true
          ui:widget: hidden
        component_id:
          title: Nombre
          type: string
          description: Unique name of the component, also will be the name of the new repository.
          ui:field: EntityNamePicker
          minLength: 3
          maxLength: 15
          pattern: '^[a-z0-9-]*$'
        description:
          title: Descripción
          type: string
          description: Descripción del componente.
    - title: Choose Locations
      description: Right now we only support Bitbucket SCM. Soon Github.
      required:
        - devops
      properties:
        invoker:
          type: string
          ui:readonly: true
          ui:widget: hidden
          enum:
            - backstage
            - zeus
          default: backstage
        devops:
          title: Source Location
          type: string
          default: bitbucket
          enum:
            - github
            - bitbucket
      dependencies:
        devops:
          allOf:
            - properties:
                devops:
                  enum:
                    - bitbucket
                bbProjectKey:
                  title: Project KEY
                  type: string
                  description: The Project KEY in BitBucket that this new repo will belong to.
              required:
                - bbProjectKey
        invoker:
          oneOf:
            - properties:
                invoker:
                  const: 'zeus'
                repoWorkspaceZeus:
                  title: Workspace
                  type: string
                  description: The workspace that this new repo will belong to. {{IMPORTANT}} It must have invited this user with admin privileges app-bs-pro@mapfre.com] (Lowercase letters recommended)
                  ui:readonly: true
              required:
                - repoWorkspaceZeus
            - properties:
                invoker:
                  const: 'backstage'
                repoWorkspaceBackstage:
                  title: Workspace
                  type: string
                  description: The workspace that this new repo will belong to. {{IMPORTANT}} It must have invited this user with admin privileges app-bs-pro@mapfre.com] (Lowercase letters recommended)
              required:
                - repoWorkspaceBackstage
      ui:order:
        - devops
        - repoWorkspaceZeus
        - repoWorkspaceBackstage
        - bbProjectKey
        - '*'
  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    - id: template
      name: Fetch Infra + Template
      action: fetch:template
      input:
        url: .
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: 
          description: 
          destination: 
          owner: 

    - id: zeus1
      name: Zeus connection & starting task
      action: mapfre:integration:zeus:1
      if: ''
      input:
        productId: 
        componentName: 
        description: 
        archetype: 
        devops: 
        repoWorkspace: 
        ownerEmail: 

    # We need a step here that determines whete workspace comes from Backstage or Zeus.

    - id: workspaceAction
      name: Determine Workspace procedence
      action: decision:workspace
      input:
        repoWorkspaceZeus: 
        repoWorkspaceBackstage: 

    # This step publishes the contents of the working directory to GitHub.
    # - id: publishGitHub
    #   name: Create Github Repository
    #   action: publish:github
    #   if: 'true'
    #   input:
    #     description: This is 
    #     repoUrl: 'github.com?workspace=&repo='

    - id: publishBitBucket
      name: Create BitBucket Repository
      if: ''
      action: publish:bitbucketCloud
      input:
        description: This is 
        repoUrl: 'bitbucket.org?workspace=&project=&repo='

    - id: zeus2
      name: Zeus ending task & connection
      action: mapfre:integration:zeus:2
      if: ''
      input:
        zeusAccessToken: 
        zeusTaskId: 

  output:
    links:
      - title: Bitbucket Repository
        url: 

      - title: GitHub Repository
        url: 
